import streamlit as st
import requests
from datetime import datetime

API_KEY = "fcc8de7015bbb202209bbf0261babf4c"
API_URL = "https://api.openweathermap.org/data/2.5/weather"

translations = {
    "en": {
        "Weather App": "ЁЯМдя╕П pyWeather",
        "placeholder": "Enter city name",
        "language": "Language",
        "search": "Search",
        "temp": "Temperature",
        "condition": "Condition",
        "minmax": "Min / Max",
        "date": "Date",
        "notfound": "City not found. Please enter the name in English.",
        "weather": {
            "Clear": "Clear",
            "Clouds": "Clouds",
            "Rain": "Rain",
            "Snow": "Snow",
            "Sunny": "Sunny",
            "Haze": "Haze",
            "Smog": "Smog"
        },
        "days": ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        "months": ["January", "February", "March", "April", "May", "June", "July", "August",
                   "September", "October", "November", "December"]
    },
    "ur": {
        "Weather App": "ЁЯМдя╕П ┘Е┘И╪│┘Е ╪з█М┘╛",
        "placeholder": "╪┤█Б╪▒ ┌й╪з ┘Ж╪з┘Е ╪п╪▒╪м ┌й╪▒█М┌║",
        "language": "╪▓╪и╪з┘Ж",
        "search": "╪к┘Д╪з╪┤ ┌й╪▒█М┌║",
        "temp": "╪п╪▒╪м█Б ╪н╪▒╪з╪▒╪к",
        "condition": "┘Е┘И╪│┘Е",
        "minmax": "┌й┘Е ╪з╪▓ ┌й┘Е / ╪▓█М╪з╪п█Б ╪│█Т ╪▓█М╪з╪п█Б",
        "date": "╪к╪з╪▒█М╪о",
        "notfound": "╪┤█Б╪▒ ┘Ж█Б█М┌║ ┘Е┘Д╪з█Ф ╪и╪▒╪з█Б ┌й╪▒┘Е ╪з┘Ж┌п╪▒█М╪▓█М ┘Е█М┌║ ┘Ж╪з┘Е ╪п╪▒╪м ┌й╪▒█М┌║█Ф",
        "weather": {
            "Clear": "╪╡╪з┘Б",
            "Clouds": "╪и╪з╪п┘Д",
            "Rain": "╪и╪з╪▒╪┤",
            "Snow": "╪и╪▒┘Б",
            "Sunny": "╪п┌╛┘И┘╛",
            "Haze": "╪п┌╛┘Ж╪п",
            "Smog": "╪п┌╛┘И╪з┌║"
        },
        "days": ["╪з╪к┘И╪з╪▒", "┘╛█М╪▒", "┘Е┘Ж┌п┘Д", "╪и╪п┌╛", "╪м┘Е╪╣╪▒╪з╪к", "╪м┘Е╪╣█Б", "█Б┘Б╪к█Б"],
        "months": ["╪м┘Ж┘И╪▒█М", "┘Б╪▒┘И╪▒█М", "┘Е╪з╪▒┌Ж", "╪з┘╛╪▒█М┘Д", "┘Е╪ж█М", "╪м┘И┘Ж", "╪м┘И┘Д╪з╪ж█М", "╪з┌п╪│╪к",
                   "╪│╪к┘Е╪и╪▒", "╪з┌й╪к┘И╪и╪▒", "┘Ж┘И┘Е╪и╪▒", "╪п╪│┘Е╪и╪▒"]
    },
    "hi": {
        "Weather App": "ЁЯМдя╕П рдореМрд╕рдо рдРрдк",
        "placeholder": "рд╢рд╣рд░ рдХрд╛ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВ",
        "language": "рднрд╛рд╖рд╛",
        "search": "рдЦреЛрдЬреЗрдВ",
        "temp": "рддрд╛рдкрдорд╛рди",
        "condition": "рдореМрд╕рдо",
        "minmax": "рдиреНрдпреВрдирддрдо / рдЕрдзрд┐рдХрддрдо",
        "date": "рддрд╛рд░реАрдЦ",
        "notfound": "рд╢рд╣рд░ рдирд╣реАрдВ рдорд┐рд▓рд╛ред рдХреГрдкрдпрд╛ рдЕрдВрдЧреНрд░реЗрдЬрд╝реА рдореЗрдВ рдирд╛рдо рджрд░реНрдЬ рдХрд░реЗрдВред",
        "weather": {
            "Clear": "рд╕рд╛рдлрд╝",
            "Clouds": "рдмрд╛рджрд▓",
            "Rain": "рдмрд╛рд░рд┐рд╢",
            "Snow": "рдмрд░реНрдлрд╝",
            "Sunny": "рдзреВрдк",
            "Haze": "рдзреБрдВрдз",
            "Smog": "рдзреБрдЖрдБ"
        },
        "days": ["рд░рд╡рд┐рд╡рд╛рд░", "рд╕реЛрдорд╡рд╛рд░", "рдордВрдЧрд▓рд╡рд╛рд░", "рдмреБрдзрд╡рд╛рд░", "рдЧреБрд░реБрд╡рд╛рд░", "рд╢реБрдХреНрд░рд╡рд╛рд░", "рд╢рдирд┐рд╡рд╛рд░"],
        "months": ["рдЬрдирд╡рд░реА", "рдлрд░рд╡рд░реА", "рдорд╛рд░реНрдЪ", "рдЕрдкреНрд░реИрд▓", "рдордИ", "рдЬреВрди", "рдЬреБрд▓рд╛рдИ", "рдЕрдЧрд╕реНрдд",
                   "рд╕рд┐рддрдВрдмрд░", "рдЕрдХреНрдЯреВрдмрд░", "рдирд╡рдВрдмрд░", "рджрд┐рд╕рдВрдмрд░"]
    }
}

st.set_page_config(page_title="Multilingual Weather App", layout="centered")

lang = st.selectbox("ЁЯМР Language / ╪▓╪и╪з┘Ж / рднрд╛рд╖рд╛", ["en", "ur", "hi"])
t = translations[lang]

st.title(t["Weather App"])
city = st.text_input(t["placeholder"])

if st.button(t["search"]):
    if city.strip() == "":
        st.warning("Please enter a city name.")
    else:
        params = {"q": city, "appid": API_KEY, "units": "metric"}
        res = requests.get(API_URL, params=params)
        data = res.json()

        if data.get("cod") != 200:
            st.error(t["notfound"])
        else:
            name = data["name"]
            country = data["sys"]["country"]
            temp = round(data["main"]["temp"])
            temp_min = round(data["main"]["temp_min"])
            temp_max = round(data["main"]["temp_max"])
            weather_condition = data["weather"][0]["main"]
            translated_condition = t["weather"].get(weather_condition, weather_condition)

            now = datetime.now()
            day = t["days"][now.weekday()]
            month = t["months"][now.month - 1]
            date_str = f"{day}, {now.day} {month} {now.year}"

            st.subheader(f"{name}, {country}")
            st.write(f"ЁЯУЕ **{t['date']}**: {date_str}")
            st.write(f"ЁЯМбя╕П **{t['temp']}**: {temp}┬░C")
            st.write(f"ЁЯМе **{t['condition']}**: {translated_condition}")
            st.write(f"ЁЯФ╗ **{t['minmax']}**: {temp_min}┬░C / {temp_max}┬░C")
